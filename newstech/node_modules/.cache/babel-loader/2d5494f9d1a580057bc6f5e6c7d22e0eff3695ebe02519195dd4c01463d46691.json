{"ast":null,"code":"var _jsxFileName = \"C:\\\\personal\\\\React-tut-thapa\\\\newstech\\\\src\\\\Stories.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stories = () => {\n  _s();\n  const {\n    hits,\n    isLoading\n  } = useGlobalContext();\n  if (isLoading) {\n    return (\n      /*#__PURE__*/\n      // <>\n      // <h1>LOADING</h1>\n      // </>\n      _jsxDEV(\"div\", {\n        className: \"spin-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spin\",\n          id: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spin\",\n          id: \"loader2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spin\",\n          id: \"loader3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spin\",\n          id: \"loader4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"text\",\n          children: \"LOADING...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    );\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stories-div\",\n      children: hits.map(curpost => {\n        const {\n          title,\n          author,\n          objectID,\n          url,\n          num_comments\n        } = curpost;\n        return (\n          /*#__PURE__*/\n          //             <div class=\"card\" style=\"width: 18rem;\">\n          //   <div class=\"card-body\">\n          //     <h5 class=\"card-title\">{title}</h5>\n          //     <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n          //     <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          //     <a href=\"#\" class=\"card-link\">Card link</a>\n          //     <a href=\"#\" class=\"card-link\">Another link</a>\n          //   </div>\n          // </div>\n          _jsxDEV(\"div\", {\n            className: \"blog_post\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container_copy\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" By \", author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [num_comments, \" comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"btn_primary\",\n                href: url,\n                target: \"_blank\",\n                children: \"Read More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, objectID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Stories, \"P+I+RQ12gISSEaVepAXBpYXgi2M=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Stories;\nexport default Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"names":["React","useGlobalContext","Stories","hits","isLoading","map","curpost","title","author","objectID","url","num_comments"],"sources":["C:/personal/React-tut-thapa/newstech/src/Stories.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst Stories = () => {\r\n  const { hits, isLoading } = useGlobalContext();\r\n  if (isLoading) {\r\n    return (\r\n      // <>\r\n      // <h1>LOADING</h1>\r\n      // </>\r\n      <div className=\"spin-container\">\r\n        <div className=\"spin\" id=\"loader\"></div>\r\n        <div className=\"spin\" id=\"loader2\"></div>\r\n        <div className=\"spin\" id=\"loader3\"></div>\r\n        <div className=\"spin\" id=\"loader4\"></div>\r\n        <span id=\"text\">LOADING...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stories-div\">\r\n        {hits.map((curpost) => {\r\n          const { title, author, objectID, url, num_comments } = curpost;\r\n          return (\r\n\r\n//             <div class=\"card\" style=\"width: 18rem;\">\r\n//   <div class=\"card-body\">\r\n//     <h5 class=\"card-title\">{title}</h5>\r\n//     <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n//     <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n//     <a href=\"#\" class=\"card-link\">Card link</a>\r\n//     <a href=\"#\" class=\"card-link\">Another link</a>\r\n//   </div>\r\n// </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"blog_post\" key={objectID}>\r\n              <div className=\"container_copy\">\r\n                <h1>{title}</h1>\r\n                {/* <p>The position property specifies the type of positioning method used for an element (static, relative, absolute, fixed, or sticky).</p> */}\r\n                <h3> By {author}</h3>\r\n                <h4>{num_comments} comments</h4>\r\n                <a className=\"btn_primary\" href={url} target=\"_blank\">\r\n                  Read More\r\n                </a>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stories;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,WAAW;AAAC;AAAA;AAE7C,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGH,gBAAgB,EAAE;EAC9C,IAAIG,SAAS,EAAE;IACb;MAAA;MACE;MACA;MACA;MACA;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC7B;UAAK,SAAS,EAAC,MAAM;UAAC,EAAE,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO,eACxC;UAAK,SAAS,EAAC,MAAM;UAAC,EAAE,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAO,eACzC;UAAK,SAAS,EAAC,MAAM;UAAC,EAAE,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAO,eACzC;UAAK,SAAS,EAAC,MAAM;UAAC,EAAE,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAO,eACzC;UAAM,EAAE,EAAC,MAAM;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B;EAEV;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBD,IAAI,CAACE,GAAG,CAAEC,OAAO,IAAK;QACrB,MAAM;UAAEC,KAAK;UAAEC,MAAM;UAAEC,QAAQ;UAAEC,GAAG;UAAEC;QAAa,CAAC,GAAGL,OAAO;QAC9D;UAAA;UAEV;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UAQY;YAAK,SAAS,EAAC,WAAW;YAAA,uBACxB;cAAK,SAAS,EAAC,gBAAgB;cAAA,wBAC7B;gBAAA,UAAKC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAEhB;gBAAA,WAAI,MAAI,EAACC,MAAM;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACrB;gBAAA,WAAKG,YAAY,EAAC,WAAS;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAChC;gBAAG,SAAS,EAAC,aAAa;gBAAC,IAAI,EAAED,GAAI;gBAAC,MAAM,EAAC,QAAQ;gBAAA,UAAC;cAEtD;gBAAA;gBAAA;gBAAA;cAAA,QAAI;YAAA;cAAA;cAAA;cAAA;YAAA;UACA,GATwBD,QAAQ;YAAA;YAAA;YAAA;UAAA;QAUlC;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAAC,GAxDIP,OAAO;EAAA,QACiBD,gBAAgB;AAAA;AAAA,KADxCC,OAAO;AA0Db,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}